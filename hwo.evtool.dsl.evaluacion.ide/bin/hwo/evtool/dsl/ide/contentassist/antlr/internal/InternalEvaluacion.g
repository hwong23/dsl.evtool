/*
 * generated by Xtext 2.25.0
 */
grammar InternalEvaluacion;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package hwo.evtool.dsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package hwo.evtool.dsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import hwo.evtool.dsl.services.EvaluacionGrammarAccess;

}
@parser::members {
	private EvaluacionGrammarAccess grammarAccess;

	public void setGrammarAccess(EvaluacionGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleEvaluacionModel
entryRuleEvaluacionModel
:
{ before(grammarAccess.getEvaluacionModelRule()); }
	 ruleEvaluacionModel
{ after(grammarAccess.getEvaluacionModelRule()); } 
	 EOF 
;

// Rule EvaluacionModel
ruleEvaluacionModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEvaluacionModelAccess().getComponentesAssignment()); }
		(rule__EvaluacionModel__ComponentesAssignment)*
		{ after(grammarAccess.getEvaluacionModelAccess().getComponentesAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCmpntEvaluacion
entryRuleCmpntEvaluacion
:
{ before(grammarAccess.getCmpntEvaluacionRule()); }
	 ruleCmpntEvaluacion
{ after(grammarAccess.getCmpntEvaluacionRule()); } 
	 EOF 
;

// Rule CmpntEvaluacion
ruleCmpntEvaluacion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCmpntEvaluacionAccess().getGroup()); }
		(rule__CmpntEvaluacion__Group__0)
		{ after(grammarAccess.getCmpntEvaluacionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCriterio
entryRuleCriterio
:
{ before(grammarAccess.getCriterioRule()); }
	 ruleCriterio
{ after(grammarAccess.getCriterioRule()); } 
	 EOF 
;

// Rule Criterio
ruleCriterio 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCriterioAccess().getAlternatives()); }
		(rule__Criterio__Alternatives)
		{ after(grammarAccess.getCriterioAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpresion
entryRuleExpresion
:
{ before(grammarAccess.getExpresionRule()); }
	 ruleExpresion
{ after(grammarAccess.getExpresionRule()); } 
	 EOF 
;

// Rule Expresion
ruleExpresion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpresionAccess().getAlternatives()); }
		(rule__Expresion__Alternatives)
		{ after(grammarAccess.getExpresionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCriterioComplejoType
entryRuleCriterioComplejoType
:
{ before(grammarAccess.getCriterioComplejoTypeRule()); }
	 ruleCriterioComplejoType
{ after(grammarAccess.getCriterioComplejoTypeRule()); } 
	 EOF 
;

// Rule CriterioComplejoType
ruleCriterioComplejoType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCriterioComplejoTypeAccess().getComponenteAssignment()); }
		(rule__CriterioComplejoType__ComponenteAssignment)
		{ after(grammarAccess.getCriterioComplejoTypeAccess().getComponenteAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCriterioAccess().getCriterioComplejoTypeParserRuleCall_0()); }
		ruleCriterioComplejoType
		{ after(grammarAccess.getCriterioAccess().getCriterioComplejoTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getCriterioAccess().getGroup_1()); }
		(rule__Criterio__Group_1__0)
		{ after(grammarAccess.getCriterioAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionAccess().getGroup_0()); }
		(rule__Expresion__Group_0__0)
		{ after(grammarAccess.getExpresionAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAccess().getGroup_1()); }
		(rule__Expresion__Group_1__0)
		{ after(grammarAccess.getExpresionAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAccess().getGroup_2()); }
		(rule__Expresion__Group_2__0)
		{ after(grammarAccess.getExpresionAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__ValorAlternatives_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionAccess().getValorSKeyword_2_1_0_0()); }
		'S'
		{ after(grammarAccess.getExpresionAccess().getValorSKeyword_2_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpresionAccess().getValorNKeyword_2_1_0_1()); }
		'N'
		{ after(grammarAccess.getExpresionAccess().getValorNKeyword_2_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CmpntEvaluacion__Group__0__Impl
	rule__CmpntEvaluacion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmpntEvaluacionAccess().getComponenteKeyword_0()); }
	'componente'
	{ after(grammarAccess.getCmpntEvaluacionAccess().getComponenteKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CmpntEvaluacion__Group__1__Impl
	rule__CmpntEvaluacion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmpntEvaluacionAccess().getNameAssignment_1()); }
	(rule__CmpntEvaluacion__NameAssignment_1)
	{ after(grammarAccess.getCmpntEvaluacionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CmpntEvaluacion__Group__2__Impl
	rule__CmpntEvaluacion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmpntEvaluacionAccess().getGroup_2()); }
	(rule__CmpntEvaluacion__Group_2__0)?
	{ after(grammarAccess.getCmpntEvaluacionAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CmpntEvaluacion__Group__3__Impl
	rule__CmpntEvaluacion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmpntEvaluacionAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getCmpntEvaluacionAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CmpntEvaluacion__Group__4__Impl
	rule__CmpntEvaluacion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmpntEvaluacionAccess().getAtributosAssignment_4()); }
	(rule__CmpntEvaluacion__AtributosAssignment_4)*
	{ after(grammarAccess.getCmpntEvaluacionAccess().getAtributosAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CmpntEvaluacion__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmpntEvaluacionAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getCmpntEvaluacionAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CmpntEvaluacion__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CmpntEvaluacion__Group_2__0__Impl
	rule__CmpntEvaluacion__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmpntEvaluacionAccess().getHeredaKeyword_2_0()); }
	'hereda'
	{ after(grammarAccess.getCmpntEvaluacionAccess().getHeredaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CmpntEvaluacion__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCmpntEvaluacionAccess().getSuperTypeAssignment_2_1()); }
	(rule__CmpntEvaluacion__SuperTypeAssignment_2_1)
	{ after(grammarAccess.getCmpntEvaluacionAccess().getSuperTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Criterio__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Criterio__Group_1__0__Impl
	rule__Criterio__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCriterioAccess().getCriterioKeyword_1_0()); }
	'criterio'
	{ after(grammarAccess.getCriterioAccess().getCriterioKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Criterio__Group_1__1__Impl
	rule__Criterio__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCriterioAccess().getNameAssignment_1_1()); }
	(rule__Criterio__NameAssignment_1_1)
	{ after(grammarAccess.getCriterioAccess().getNameAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Criterio__Group_1__2__Impl
	rule__Criterio__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCriterioAccess().getEqualsSignKeyword_1_2()); }
	'='
	{ after(grammarAccess.getCriterioAccess().getEqualsSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Criterio__Group_1__3__Impl
	rule__Criterio__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCriterioAccess().getExpresionAssignment_1_3()); }
	(rule__Criterio__ExpresionAssignment_1_3)
	{ after(grammarAccess.getCriterioAccess().getExpresionAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Criterio__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCriterioAccess().getGroup_1_4()); }
	(rule__Criterio__Group_1_4__0)?
	{ after(grammarAccess.getCriterioAccess().getGroup_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Criterio__Group_1_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Criterio__Group_1_4__0__Impl
	rule__Criterio__Group_1_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCriterioAccess().getColonKeyword_1_4_0()); }
	':'
	{ after(grammarAccess.getCriterioAccess().getColonKeyword_1_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Criterio__Group_1_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__Group_1_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCriterioAccess().getSoporteAssignment_1_4_1()); }
	(rule__Criterio__SoporteAssignment_1_4_1)
	{ after(grammarAccess.getCriterioAccess().getSoporteAssignment_1_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expresion__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expresion__Group_0__0__Impl
	rule__Expresion__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionAccess().getIntConstantAction_0_0()); }
	()
	{ after(grammarAccess.getExpresionAccess().getIntConstantAction_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expresion__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionAccess().getValorAssignment_0_1()); }
	(rule__Expresion__ValorAssignment_0_1)
	{ after(grammarAccess.getExpresionAccess().getValorAssignment_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expresion__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expresion__Group_1__0__Impl
	rule__Expresion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionAccess().getStringConstantAction_1_0()); }
	()
	{ after(grammarAccess.getExpresionAccess().getStringConstantAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expresion__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionAccess().getValorAssignment_1_1()); }
	(rule__Expresion__ValorAssignment_1_1)
	{ after(grammarAccess.getExpresionAccess().getValorAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expresion__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expresion__Group_2__0__Impl
	rule__Expresion__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionAccess().getBoolConstantAction_2_0()); }
	()
	{ after(grammarAccess.getExpresionAccess().getBoolConstantAction_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expresion__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpresionAccess().getValorAssignment_2_1()); }
	(rule__Expresion__ValorAssignment_2_1)
	{ after(grammarAccess.getExpresionAccess().getValorAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EvaluacionModel__ComponentesAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEvaluacionModelAccess().getComponentesCmpntEvaluacionParserRuleCall_0()); }
		ruleCmpntEvaluacion
		{ after(grammarAccess.getEvaluacionModelAccess().getComponentesCmpntEvaluacionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCmpntEvaluacionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCmpntEvaluacionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__SuperTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCmpntEvaluacionAccess().getSuperTypeCmpntEvaluacionCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getCmpntEvaluacionAccess().getSuperTypeCmpntEvaluacionIDTerminalRuleCall_2_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCmpntEvaluacionAccess().getSuperTypeCmpntEvaluacionIDTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getCmpntEvaluacionAccess().getSuperTypeCmpntEvaluacionCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CmpntEvaluacion__AtributosAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCmpntEvaluacionAccess().getAtributosCriterioParserRuleCall_4_0()); }
		ruleCriterio
		{ after(grammarAccess.getCmpntEvaluacionAccess().getAtributosCriterioParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__NameAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCriterioAccess().getNameIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCriterioAccess().getNameIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__ExpresionAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCriterioAccess().getExpresionExpresionParserRuleCall_1_3_0()); }
		ruleExpresion
		{ after(grammarAccess.getCriterioAccess().getExpresionExpresionParserRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Criterio__SoporteAssignment_1_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCriterioAccess().getSoporteExpresionParserRuleCall_1_4_1_0()); }
		ruleExpresion
		{ after(grammarAccess.getCriterioAccess().getSoporteExpresionParserRuleCall_1_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__ValorAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionAccess().getValorINTTerminalRuleCall_0_1_0()); }
		RULE_INT
		{ after(grammarAccess.getExpresionAccess().getValorINTTerminalRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__ValorAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionAccess().getValorSTRINGTerminalRuleCall_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getExpresionAccess().getValorSTRINGTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expresion__ValorAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpresionAccess().getValorAlternatives_2_1_0()); }
		(rule__Expresion__ValorAlternatives_2_1_0)
		{ after(grammarAccess.getExpresionAccess().getValorAlternatives_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CriterioComplejoType__ComponenteAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCriterioComplejoTypeAccess().getComponenteCmpntEvaluacionCrossReference_0()); }
		(
			{ before(grammarAccess.getCriterioComplejoTypeAccess().getComponenteCmpntEvaluacionIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getCriterioComplejoTypeAccess().getComponenteCmpntEvaluacionIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getCriterioComplejoTypeAccess().getComponenteCmpntEvaluacionCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
