/*
 * generated by Xtext 2.25.0
 */
package hwo.evtool.dsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import hwo.evtool.dsl.evaluacion.Estado
import hwo.evtool.dsl.evaluacion.Commando

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class EvaluacionGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {

	for (e : resource.allContents.toIterable.filter(Estado)) {
        fsa.generateFile (
            "componentes/" + e.name + ".java",
            e.compile
        )
    }
}

	
//	fsa.generateFile(resource.className + ".java", 
//		toJavaCode(resource.contents.head as MaquinaEstados)
//	)


		
	def CharSequence compile(Estado e) '''
		«FOR c : e.actions»
			«c.declareCommand»
		«ENDFOR»
	'''

	protected def declareCommand(Commando command) '''
		protected void do«command.name.toFirstUpper»() {
			System.out.println("Executing command «command.name» («command.code»)");
		}
	'''
}