/*
 * generated by Xtext 2.25.0
 */
package hwo.evtool.dsl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import static extension org.eclipse.xtext.nodemodel.util.NodeModelUtils.*
import hwo.evtool.dsl.evaluacion.EvaluaccionModel

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class EvaluacionGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(Greeting)
//				.map[name]
//				.join(', '))
	resource.allContents.toIterable.filter(EvaluaccionModel).forEach [
			fsa.generateFile
				('''«resource.URI.lastSegment».evaluated''',
					interpretExpressions)
		]
	}

	def interpretExpressions(EvaluaccionModel model) {
		model.entities.map [
	
		'''«getNode.getTokenText» ~>'''
		].join("\n")
	}
}
