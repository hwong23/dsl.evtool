/*
 * generated by Xtext 2.25.0
 */
package hwo.evtool.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EvaluacionGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class MaquinaEstadosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.MaquinaEstados");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMaquinaEstadosAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cEventosKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cEventsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cEventsEventoParserRuleCall_1_1_0 = (RuleCall)cEventsAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cResetEventsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cResetEventsAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cResetEventsEventoCrossReference_2_1_0 = (CrossReference)cResetEventsAssignment_2_1.eContents().get(0);
		private final RuleCall cResetEventsEventoIDTerminalRuleCall_2_1_0_1 = (RuleCall)cResetEventsEventoCrossReference_2_1_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cComandosKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cCommandsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cCommandsComandoParserRuleCall_3_1_0 = (RuleCall)cCommandsAssignment_3_1.eContents().get(0);
		private final Assignment cStatesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStatesEstadoParserRuleCall_4_0 = (RuleCall)cStatesAssignment_4.eContents().get(0);
		
		//MaquinaEstados :
		//    {MaquinaEstados}
		//    ('eventos'
		//        events+=Evento+
		//    )?
		//    ('resetEvents'
		//        resetEvents+=[Evento]+
		//    )?
		//    ('comandos'
		//        commands+=Comando+
		//    )?
		//    states+=Estado*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{MaquinaEstados}
		//('eventos'
		//    events+=Evento+
		//)?
		//('resetEvents'
		//    resetEvents+=[Evento]+
		//)?
		//('comandos'
		//    commands+=Comando+
		//)?
		//states+=Estado*
		public Group getGroup() { return cGroup; }
		
		//{MaquinaEstados}
		public Action getMaquinaEstadosAction_0() { return cMaquinaEstadosAction_0; }
		
		//('eventos'
		//    events+=Evento+
		//)?
		public Group getGroup_1() { return cGroup_1; }
		
		//'eventos'
		public Keyword getEventosKeyword_1_0() { return cEventosKeyword_1_0; }
		
		//events+=Evento+
		public Assignment getEventsAssignment_1_1() { return cEventsAssignment_1_1; }
		
		//Evento
		public RuleCall getEventsEventoParserRuleCall_1_1_0() { return cEventsEventoParserRuleCall_1_1_0; }
		
		//('resetEvents'
		//    resetEvents+=[Evento]+
		//)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'resetEvents'
		public Keyword getResetEventsKeyword_2_0() { return cResetEventsKeyword_2_0; }
		
		//resetEvents+=[Evento]+
		public Assignment getResetEventsAssignment_2_1() { return cResetEventsAssignment_2_1; }
		
		//[Evento]
		public CrossReference getResetEventsEventoCrossReference_2_1_0() { return cResetEventsEventoCrossReference_2_1_0; }
		
		//ID
		public RuleCall getResetEventsEventoIDTerminalRuleCall_2_1_0_1() { return cResetEventsEventoIDTerminalRuleCall_2_1_0_1; }
		
		//('comandos'
		//    commands+=Comando+
		//)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'comandos'
		public Keyword getComandosKeyword_3_0() { return cComandosKeyword_3_0; }
		
		//commands+=Comando+
		public Assignment getCommandsAssignment_3_1() { return cCommandsAssignment_3_1; }
		
		//Comando
		public RuleCall getCommandsComandoParserRuleCall_3_1_0() { return cCommandsComandoParserRuleCall_3_1_0; }
		
		//states+=Estado*
		public Assignment getStatesAssignment_4() { return cStatesAssignment_4; }
		
		//Estado
		public RuleCall getStatesEstadoParserRuleCall_4_0() { return cStatesEstadoParserRuleCall_4_0; }
	}
	public class EventoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.Evento");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cCodeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCodeIDTerminalRuleCall_1_0 = (RuleCall)cCodeAssignment_1.eContents().get(0);
		
		//Evento:
		//    name=ID code=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID code=ID
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//code=ID
		public Assignment getCodeAssignment_1() { return cCodeAssignment_1; }
		
		//ID
		public RuleCall getCodeIDTerminalRuleCall_1_0() { return cCodeIDTerminalRuleCall_1_0; }
	}
	public class ComandoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.Comando");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cArgumentoAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cArgumentoAtomoParserRuleCall_2_0 = (RuleCall)cArgumentoAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cComentarioAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cComentarioSTRINGTerminalRuleCall_3_1_0 = (RuleCall)cComentarioAssignment_3_1.eContents().get(0);
		
		//Comando:
		//    name=ID '=' argumento=Atomo
		//    (':' comentario=STRING)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID '=' argumento=Atomo
		//(':' comentario=STRING)?
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//'='
		public Keyword getEqualsSignKeyword_1() { return cEqualsSignKeyword_1; }
		
		//argumento=Atomo
		public Assignment getArgumentoAssignment_2() { return cArgumentoAssignment_2; }
		
		//Atomo
		public RuleCall getArgumentoAtomoParserRuleCall_2_0() { return cArgumentoAtomoParserRuleCall_2_0; }
		
		//(':' comentario=STRING)?
		public Group getGroup_3() { return cGroup_3; }
		
		//':'
		public Keyword getColonKeyword_3_0() { return cColonKeyword_3_0; }
		
		//comentario=STRING
		public Assignment getComentarioAssignment_3_1() { return cComentarioAssignment_3_1; }
		
		//STRING
		public RuleCall getComentarioSTRINGTerminalRuleCall_3_1_0() { return cComentarioSTRINGTerminalRuleCall_3_1_0; }
	}
	public class AtomoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.Atomo");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Action cIntConstantAction_0_0 = (Action)cGroup_0.eContents().get(0);
		private final Assignment cValorAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cValorPuntuacionParserRuleCall_0_1_0 = (RuleCall)cValorAssignment_0_1.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Action cStringConstantAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cValorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValorSTRINGTerminalRuleCall_1_1_0 = (RuleCall)cValorAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Action cSiNoConstantAction_2_0 = (Action)cGroup_2.eContents().get(0);
		private final Assignment cValorAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final Alternatives cValorAlternatives_2_1_0 = (Alternatives)cValorAssignment_2_1.eContents().get(0);
		private final Keyword cValorSKeyword_2_1_0_0 = (Keyword)cValorAlternatives_2_1_0.eContents().get(0);
		private final Keyword cValorNKeyword_2_1_0_1 = (Keyword)cValorAlternatives_2_1_0.eContents().get(1);
		
		//Atomo:
		//    {IntConstant} valor=Puntuacion |
		//    {StringConstant} valor=STRING |
		//    {SiNoConstant} valor=('S' | 'N')
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{IntConstant} valor=Puntuacion |
		//{StringConstant} valor=STRING |
		//{SiNoConstant} valor=('S' | 'N')
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//{IntConstant} valor=Puntuacion
		public Group getGroup_0() { return cGroup_0; }
		
		//{IntConstant}
		public Action getIntConstantAction_0_0() { return cIntConstantAction_0_0; }
		
		//valor=Puntuacion
		public Assignment getValorAssignment_0_1() { return cValorAssignment_0_1; }
		
		//Puntuacion
		public RuleCall getValorPuntuacionParserRuleCall_0_1_0() { return cValorPuntuacionParserRuleCall_0_1_0; }
		
		//{StringConstant} valor=STRING
		public Group getGroup_1() { return cGroup_1; }
		
		//{StringConstant}
		public Action getStringConstantAction_1_0() { return cStringConstantAction_1_0; }
		
		//valor=STRING
		public Assignment getValorAssignment_1_1() { return cValorAssignment_1_1; }
		
		//STRING
		public RuleCall getValorSTRINGTerminalRuleCall_1_1_0() { return cValorSTRINGTerminalRuleCall_1_1_0; }
		
		//{SiNoConstant} valor=('S' | 'N')
		public Group getGroup_2() { return cGroup_2; }
		
		//{SiNoConstant}
		public Action getSiNoConstantAction_2_0() { return cSiNoConstantAction_2_0; }
		
		//valor=('S' | 'N')
		public Assignment getValorAssignment_2_1() { return cValorAssignment_2_1; }
		
		//('S' | 'N')
		public Alternatives getValorAlternatives_2_1_0() { return cValorAlternatives_2_1_0; }
		
		//'S'
		public Keyword getValorSKeyword_2_1_0_0() { return cValorSKeyword_2_1_0_0; }
		
		//'N'
		public Keyword getValorNKeyword_2_1_0_1() { return cValorNKeyword_2_1_0_1; }
	}
	public class PuntuacionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.Puntuacion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNotaAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNotaINTTerminalRuleCall_0_0 = (RuleCall)cNotaAssignment_0.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cCalificacionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cCalificacionINTTerminalRuleCall_2_0 = (RuleCall)cCalificacionAssignment_2.eContents().get(0);
		
		//Puntuacion:
		//    nota=INT '/' calificacion=INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//nota=INT '/' calificacion=INT
		public Group getGroup() { return cGroup; }
		
		//nota=INT
		public Assignment getNotaAssignment_0() { return cNotaAssignment_0; }
		
		//INT
		public RuleCall getNotaINTTerminalRuleCall_0_0() { return cNotaINTTerminalRuleCall_0_0; }
		
		//'/'
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }
		
		//calificacion=INT
		public Assignment getCalificacionAssignment_2() { return cCalificacionAssignment_2; }
		
		//INT
		public RuleCall getCalificacionINTTerminalRuleCall_2_0() { return cCalificacionINTTerminalRuleCall_2_0; }
	}
	public class EstadoElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.Estado");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStateKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cActionsKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cActionsAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final CrossReference cActionsComandoCrossReference_2_2_0 = (CrossReference)cActionsAssignment_2_2.eContents().get(0);
		private final RuleCall cActionsComandoIDTerminalRuleCall_2_2_0_1 = (RuleCall)cActionsComandoCrossReference_2_2_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cTransitionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTransitionsTransicionParserRuleCall_3_0 = (RuleCall)cTransitionsAssignment_3.eContents().get(0);
		
		//Estado:
		//    'state' name=ID
		//        ('actions' '{' actions+=[Comando]+ '}')?
		//        transitions+=Transicion*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'state' name=ID
		//    ('actions' '{' actions+=[Comando]+ '}')?
		//    transitions+=Transicion*
		public Group getGroup() { return cGroup; }
		
		//'state'
		public Keyword getStateKeyword_0() { return cStateKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('actions' '{' actions+=[Comando]+ '}')?
		public Group getGroup_2() { return cGroup_2; }
		
		//'actions'
		public Keyword getActionsKeyword_2_0() { return cActionsKeyword_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }
		
		//actions+=[Comando]+
		public Assignment getActionsAssignment_2_2() { return cActionsAssignment_2_2; }
		
		//[Comando]
		public CrossReference getActionsComandoCrossReference_2_2_0() { return cActionsComandoCrossReference_2_2_0; }
		
		//ID
		public RuleCall getActionsComandoIDTerminalRuleCall_2_2_0_1() { return cActionsComandoIDTerminalRuleCall_2_2_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }
		
		//transitions+=Transicion*
		public Assignment getTransitionsAssignment_3() { return cTransitionsAssignment_3; }
		
		//Transicion
		public RuleCall getTransitionsTransicionParserRuleCall_3_0() { return cTransitionsTransicionParserRuleCall_3_0; }
	}
	public class TransicionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.Transicion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cEventAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cEventEventoCrossReference_0_0 = (CrossReference)cEventAssignment_0.eContents().get(0);
		private final RuleCall cEventEventoIDTerminalRuleCall_0_0_1 = (RuleCall)cEventEventoCrossReference_0_0.eContents().get(1);
		private final Keyword cEqualsSignGreaterThanSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cStateEstadoCrossReference_2_0 = (CrossReference)cStateAssignment_2.eContents().get(0);
		private final RuleCall cStateEstadoIDTerminalRuleCall_2_0_1 = (RuleCall)cStateEstadoCrossReference_2_0.eContents().get(1);
		
		//Transicion:
		//    event=[Evento] '=>' state=[Estado]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//event=[Evento] '=>' state=[Estado]
		public Group getGroup() { return cGroup; }
		
		//event=[Evento]
		public Assignment getEventAssignment_0() { return cEventAssignment_0; }
		
		//[Evento]
		public CrossReference getEventEventoCrossReference_0_0() { return cEventEventoCrossReference_0_0; }
		
		//ID
		public RuleCall getEventEventoIDTerminalRuleCall_0_0_1() { return cEventEventoIDTerminalRuleCall_0_0_1; }
		
		//'=>'
		public Keyword getEqualsSignGreaterThanSignKeyword_1() { return cEqualsSignGreaterThanSignKeyword_1; }
		
		//state=[Estado]
		public Assignment getStateAssignment_2() { return cStateAssignment_2; }
		
		//[Estado]
		public CrossReference getStateEstadoCrossReference_2_0() { return cStateEstadoCrossReference_2_0; }
		
		//ID
		public RuleCall getStateEstadoIDTerminalRuleCall_2_0_1() { return cStateEstadoIDTerminalRuleCall_2_0_1; }
	}
	
	
	private final MaquinaEstadosElements pMaquinaEstados;
	private final EventoElements pEvento;
	private final ComandoElements pComando;
	private final AtomoElements pAtomo;
	private final PuntuacionElements pPuntuacion;
	private final EstadoElements pEstado;
	private final TransicionElements pTransicion;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EvaluacionGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pMaquinaEstados = new MaquinaEstadosElements();
		this.pEvento = new EventoElements();
		this.pComando = new ComandoElements();
		this.pAtomo = new AtomoElements();
		this.pPuntuacion = new PuntuacionElements();
		this.pEstado = new EstadoElements();
		this.pTransicion = new TransicionElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("hwo.evtool.dsl.Evaluacion".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//MaquinaEstados :
	//    {MaquinaEstados}
	//    ('eventos'
	//        events+=Evento+
	//    )?
	//    ('resetEvents'
	//        resetEvents+=[Evento]+
	//    )?
	//    ('comandos'
	//        commands+=Comando+
	//    )?
	//    states+=Estado*
	//;
	public MaquinaEstadosElements getMaquinaEstadosAccess() {
		return pMaquinaEstados;
	}
	
	public ParserRule getMaquinaEstadosRule() {
		return getMaquinaEstadosAccess().getRule();
	}
	
	//Evento:
	//    name=ID code=ID
	//;
	public EventoElements getEventoAccess() {
		return pEvento;
	}
	
	public ParserRule getEventoRule() {
		return getEventoAccess().getRule();
	}
	
	//Comando:
	//    name=ID '=' argumento=Atomo
	//    (':' comentario=STRING)?
	//;
	public ComandoElements getComandoAccess() {
		return pComando;
	}
	
	public ParserRule getComandoRule() {
		return getComandoAccess().getRule();
	}
	
	//Atomo:
	//    {IntConstant} valor=Puntuacion |
	//    {StringConstant} valor=STRING |
	//    {SiNoConstant} valor=('S' | 'N')
	//;
	public AtomoElements getAtomoAccess() {
		return pAtomo;
	}
	
	public ParserRule getAtomoRule() {
		return getAtomoAccess().getRule();
	}
	
	//Puntuacion:
	//    nota=INT '/' calificacion=INT
	//;
	public PuntuacionElements getPuntuacionAccess() {
		return pPuntuacion;
	}
	
	public ParserRule getPuntuacionRule() {
		return getPuntuacionAccess().getRule();
	}
	
	//Estado:
	//    'state' name=ID
	//        ('actions' '{' actions+=[Comando]+ '}')?
	//        transitions+=Transicion*
	//;
	public EstadoElements getEstadoAccess() {
		return pEstado;
	}
	
	public ParserRule getEstadoRule() {
		return getEstadoAccess().getRule();
	}
	
	//Transicion:
	//    event=[Evento] '=>' state=[Estado]
	//;
	public TransicionElements getTransicionAccess() {
		return pTransicion;
	}
	
	public ParserRule getTransicionRule() {
		return getTransicionAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
