/*
 * generated by Xtext 2.25.0
 */
package hwo.evtool.dsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class EvaluacionGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class ModelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.Model");
		private final Assignment cEntitiesAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cEntitiesCmpnntEvaluacionParserRuleCall_0 = (RuleCall)cEntitiesAssignment.eContents().get(0);
		
		//Model:
		//    entities+=CmpnntEvaluacion*;
		@Override public ParserRule getRule() { return rule; }
		
		//entities+=CmpnntEvaluacion*
		public Assignment getEntitiesAssignment() { return cEntitiesAssignment; }
		
		//CmpnntEvaluacion
		public RuleCall getEntitiesCmpnntEvaluacionParserRuleCall_0() { return cEntitiesCmpnntEvaluacionParserRuleCall_0; }
	}
	public class CmpnntEvaluacionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.CmpnntEvaluacion");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComopnenteKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cHeredaKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cSuperTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cSuperTypeCmpnntEvaluacionCrossReference_2_1_0 = (CrossReference)cSuperTypeAssignment_2_1.eContents().get(0);
		private final RuleCall cSuperTypeCmpnntEvaluacionIDTerminalRuleCall_2_1_0_1 = (RuleCall)cSuperTypeCmpnntEvaluacionCrossReference_2_1_0.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cAttributesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cAttributesCriterioParserRuleCall_4_0 = (RuleCall)cAttributesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//CmpnntEvaluacion:
		//    'comopnente' name=ID ('hereda' superType=[CmpnntEvaluacion])? '{'
		//        attributes+=Criterio*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'comopnente' name=ID ('hereda' superType=[CmpnntEvaluacion])? '{'
		//    attributes+=Criterio*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'comopnente'
		public Keyword getComopnenteKeyword_0() { return cComopnenteKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//('hereda' superType=[CmpnntEvaluacion])?
		public Group getGroup_2() { return cGroup_2; }
		
		//'hereda'
		public Keyword getHeredaKeyword_2_0() { return cHeredaKeyword_2_0; }
		
		//superType=[CmpnntEvaluacion]
		public Assignment getSuperTypeAssignment_2_1() { return cSuperTypeAssignment_2_1; }
		
		//[CmpnntEvaluacion]
		public CrossReference getSuperTypeCmpnntEvaluacionCrossReference_2_1_0() { return cSuperTypeCmpnntEvaluacionCrossReference_2_1_0; }
		
		//ID
		public RuleCall getSuperTypeCmpnntEvaluacionIDTerminalRuleCall_2_1_0_1() { return cSuperTypeCmpnntEvaluacionIDTerminalRuleCall_2_1_0_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }
		
		//attributes+=Criterio*
		public Assignment getAttributesAssignment_4() { return cAttributesAssignment_4; }
		
		//Criterio
		public RuleCall getAttributesCriterioParserRuleCall_4_0() { return cAttributesCriterioParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class CriterioElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.Criterio");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeCriterioTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//Criterio:
		//    type=CriterioType name=ID ';';
		@Override public ParserRule getRule() { return rule; }
		
		//type=CriterioType name=ID ';'
		public Group getGroup() { return cGroup; }
		
		//type=CriterioType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }
		
		//CriterioType
		public RuleCall getTypeCriterioTypeParserRuleCall_0_0() { return cTypeCriterioTypeParserRuleCall_0_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//';'
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}
	public class CriterioTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.CriterioType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cElementTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cElementTypeElementTypeParserRuleCall_0_0 = (RuleCall)cElementTypeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cArrayAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final Keyword cArrayLeftSquareBracketKeyword_1_0_0 = (Keyword)cArrayAssignment_1_0.eContents().get(0);
		private final Assignment cLengthAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cLengthINTTerminalRuleCall_1_1_0 = (RuleCall)cLengthAssignment_1_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//CriterioType:
		//    elementType=ElementType (array?='[' (length=INT)? ']')?;
		@Override public ParserRule getRule() { return rule; }
		
		//elementType=ElementType (array?='[' (length=INT)? ']')?
		public Group getGroup() { return cGroup; }
		
		//elementType=ElementType
		public Assignment getElementTypeAssignment_0() { return cElementTypeAssignment_0; }
		
		//ElementType
		public RuleCall getElementTypeElementTypeParserRuleCall_0_0() { return cElementTypeElementTypeParserRuleCall_0_0; }
		
		//(array?='[' (length=INT)? ']')?
		public Group getGroup_1() { return cGroup_1; }
		
		//array?='['
		public Assignment getArrayAssignment_1_0() { return cArrayAssignment_1_0; }
		
		//'['
		public Keyword getArrayLeftSquareBracketKeyword_1_0_0() { return cArrayLeftSquareBracketKeyword_1_0_0; }
		
		//(length=INT)?
		public Assignment getLengthAssignment_1_1() { return cLengthAssignment_1_1; }
		
		//INT
		public RuleCall getLengthINTTerminalRuleCall_1_1_0() { return cLengthINTTerminalRuleCall_1_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }
	}
	public class ElementTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.ElementType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBasicTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cComponenteTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ElementType:
		//    BasicType | ComponenteType;
		@Override public ParserRule getRule() { return rule; }
		
		//BasicType | ComponenteType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//BasicType
		public RuleCall getBasicTypeParserRuleCall_0() { return cBasicTypeParserRuleCall_0; }
		
		//ComponenteType
		public RuleCall getComponenteTypeParserRuleCall_1() { return cComponenteTypeParserRuleCall_1; }
	}
	public class BasicTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.BasicType");
		private final Assignment cTypeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Alternatives cTypeNameAlternatives_0 = (Alternatives)cTypeNameAssignment.eContents().get(0);
		private final Keyword cTypeNameStringKeyword_0_0 = (Keyword)cTypeNameAlternatives_0.eContents().get(0);
		private final Keyword cTypeNameIntKeyword_0_1 = (Keyword)cTypeNameAlternatives_0.eContents().get(1);
		private final Keyword cTypeNameBooleanKeyword_0_2 = (Keyword)cTypeNameAlternatives_0.eContents().get(2);
		
		//BasicType:
		//    typeName=('string' | 'int' | 'boolean');
		@Override public ParserRule getRule() { return rule; }
		
		//typeName=('string' | 'int' | 'boolean')
		public Assignment getTypeNameAssignment() { return cTypeNameAssignment; }
		
		//('string' | 'int' | 'boolean')
		public Alternatives getTypeNameAlternatives_0() { return cTypeNameAlternatives_0; }
		
		//'string'
		public Keyword getTypeNameStringKeyword_0_0() { return cTypeNameStringKeyword_0_0; }
		
		//'int'
		public Keyword getTypeNameIntKeyword_0_1() { return cTypeNameIntKeyword_0_1; }
		
		//'boolean'
		public Keyword getTypeNameBooleanKeyword_0_2() { return cTypeNameBooleanKeyword_0_2; }
	}
	public class ComponenteTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "hwo.evtool.dsl.Evaluacion.ComponenteType");
		private final Assignment cEntityAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cEntityCmpnntEvaluacionCrossReference_0 = (CrossReference)cEntityAssignment.eContents().get(0);
		private final RuleCall cEntityCmpnntEvaluacionIDTerminalRuleCall_0_1 = (RuleCall)cEntityCmpnntEvaluacionCrossReference_0.eContents().get(1);
		
		//ComponenteType:
		//    entity=[CmpnntEvaluacion];
		@Override public ParserRule getRule() { return rule; }
		
		//entity=[CmpnntEvaluacion]
		public Assignment getEntityAssignment() { return cEntityAssignment; }
		
		//[CmpnntEvaluacion]
		public CrossReference getEntityCmpnntEvaluacionCrossReference_0() { return cEntityCmpnntEvaluacionCrossReference_0; }
		
		//ID
		public RuleCall getEntityCmpnntEvaluacionIDTerminalRuleCall_0_1() { return cEntityCmpnntEvaluacionIDTerminalRuleCall_0_1; }
	}
	
	
	private final ModelElements pModel;
	private final CmpnntEvaluacionElements pCmpnntEvaluacion;
	private final CriterioElements pCriterio;
	private final CriterioTypeElements pCriterioType;
	private final ElementTypeElements pElementType;
	private final BasicTypeElements pBasicType;
	private final ComponenteTypeElements pComponenteType;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public EvaluacionGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pModel = new ModelElements();
		this.pCmpnntEvaluacion = new CmpnntEvaluacionElements();
		this.pCriterio = new CriterioElements();
		this.pCriterioType = new CriterioTypeElements();
		this.pElementType = new ElementTypeElements();
		this.pBasicType = new BasicTypeElements();
		this.pComponenteType = new ComponenteTypeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("hwo.evtool.dsl.Evaluacion".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Model:
	//    entities+=CmpnntEvaluacion*;
	public ModelElements getModelAccess() {
		return pModel;
	}
	
	public ParserRule getModelRule() {
		return getModelAccess().getRule();
	}
	
	//CmpnntEvaluacion:
	//    'comopnente' name=ID ('hereda' superType=[CmpnntEvaluacion])? '{'
	//        attributes+=Criterio*
	//    '}';
	public CmpnntEvaluacionElements getCmpnntEvaluacionAccess() {
		return pCmpnntEvaluacion;
	}
	
	public ParserRule getCmpnntEvaluacionRule() {
		return getCmpnntEvaluacionAccess().getRule();
	}
	
	//Criterio:
	//    type=CriterioType name=ID ';';
	public CriterioElements getCriterioAccess() {
		return pCriterio;
	}
	
	public ParserRule getCriterioRule() {
		return getCriterioAccess().getRule();
	}
	
	//CriterioType:
	//    elementType=ElementType (array?='[' (length=INT)? ']')?;
	public CriterioTypeElements getCriterioTypeAccess() {
		return pCriterioType;
	}
	
	public ParserRule getCriterioTypeRule() {
		return getCriterioTypeAccess().getRule();
	}
	
	//ElementType:
	//    BasicType | ComponenteType;
	public ElementTypeElements getElementTypeAccess() {
		return pElementType;
	}
	
	public ParserRule getElementTypeRule() {
		return getElementTypeAccess().getRule();
	}
	
	//BasicType:
	//    typeName=('string' | 'int' | 'boolean');
	public BasicTypeElements getBasicTypeAccess() {
		return pBasicType;
	}
	
	public ParserRule getBasicTypeRule() {
		return getBasicTypeAccess().getRule();
	}
	
	//ComponenteType:
	//    entity=[CmpnntEvaluacion];
	public ComponenteTypeElements getComponenteTypeAccess() {
		return pComponenteType;
	}
	
	public ParserRule getComponenteTypeRule() {
		return getComponenteTypeAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
